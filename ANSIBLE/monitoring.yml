---
- name: Install monitoring tools
  hosts: monitoring_host
  become: yes
  tasks:

    # Grafana installation tasks
    - name: Add Grafana GPG key
      ansible.builtin.apt_key:
        url: https://packages.grafana.com/gpg.key
        state: present

    - name: Add Grafana repository
      ansible.builtin.apt_repository:
        repo: "deb https://packages.grafana.com/oss/deb stable main"
        state: present

    - name: Install Grafana
      ansible.builtin.apt:
        update_cache: yes
        name: grafana
        state: latest

    - name: Enable and start Grafana service
      ansible.builtin.systemd:
        name: grafana-server
        enabled: yes
        state: started

    # Prometheus installation tasks
    - name: Create Prometheus user
      ansible.builtin.user:
        name: prometheus
        system: yes
        createhome: no
        shell: /bin/false

    - name: Download and extract Prometheus
      ansible.builtin.unarchive:
        src: https://github.com/prometheus/prometheus/releases/download/v2.47.1/prometheus-2.47.1.linux-amd64.tar.gz
        dest: /tmp
        remote_src: yes
        creates: /tmp/prometheus-2.47.1.linux-amd64

    - name: Create directories for Prometheus
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: prometheus
        group: prometheus
      with_items:
        - /etc/prometheus
        - /data

    - name: Move Prometheus binaries and set permissions
      ansible.builtin.copy:
        src: "/tmp/prometheus-2.47.1.linux-amd64/{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: prometheus
        group: prometheus
        mode: "{{ item.mode | default(omit) }}"
      with_items:
        - { src: 'prometheus', dest: '/usr/local/bin/', mode: '0755' }
        - { src: 'promtool', dest: '/usr/local/bin/', mode: '0755' }
        - { src: 'consoles', dest: '/etc/prometheus/', mode: '0755' }
        - { src: 'console_libraries', dest: '/etc/prometheus/', mode: '0755' }
        - { src: 'prometheus.yml', dest: '/etc/prometheus/prometheus.yml', mode: '0644' }

    - name: Set up Prometheus systemd service
      ansible.builtin.template:
        src: prometheus.service.j2
        dest: /etc/systemd/system/prometheus.service
        mode: '0644'
      notify: restart prometheus

    - name: Enable and start Prometheus service
      ansible.builtin.systemd:
        name: prometheus
        enabled: yes
        state: started

    # Node Exporter installation tasks
    - name: Create Node Exporter user
      ansible.builtin.user:
        name: node_exporter
        system: yes
        createhome: no
        shell: /bin/false

    - name: Download and extract Node Exporter
      ansible.builtin.unarchive:
        src: https://github.com/prometheus/node_exporter/releases/download/v1.6.1/node_exporter-1.6.1.linux-amd64.tar.gz
        dest: /tmp
        remote_src: yes
        creates: /tmp/node_exporter-1.6.1.linux-amd64

    - name: Move Node Exporter binary and set permissions
      ansible.builtin.copy:
        src: "/tmp/node_exporter-1.6.1.linux-amd64/node_exporter"
        dest: "/usr/local/bin/node_exporter"
        owner: root
        group: root
        mode: '0755'

    - name: Set up Node Exporter systemd service
      ansible.builtin.template:
        src: node_exporter.service.j2
        dest: /etc/systemd/system/node_exporter
        mode: '0644'
        notify: restart node_exporter